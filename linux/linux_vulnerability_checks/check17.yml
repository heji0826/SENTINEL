- set_fact:
    diag: "{{ {'항목': '$HOME/.rhosts, hosts.equiv 사용 금지', 'id': 17, '조치방안': '.rhosts, hosts.equiv 파일 미사용 시 파일 삭제 및 .rhosts, hosts.equiv 파일 사용 시 ( 파일의 소유자 root 또는, 해당 계정으로 변경, 파일의 퍼미션을 600 이하로 변경, 파일에서 “+”를 제거하고 허용 호스트 및 계정 등록)'} }}"
    diag_hosts:
      { '항목': '.rhosts 또는 hosts.equiv 파일 소유자 및 권한 확인', 'id': 17 }
    diag_plus: 
      { '항목': '계정 별 ‘+’ 부여 적절성 확인', 'id': 17 }
    diag_file_600: 
      { '항목': '파일 권한 설정 확인', 'id': 17 }

- name: 본인 계정 확인
  shell: whoami
  register: user_name

- name: hosts.equiv 파일 소유자 및 권한 확인
  shell: "ls -al /etc/hosts.equiv"
  register: hosts_check
  ignore_errors: true

- name: hosts.equiv 파일 정보 출력
  debug:
    var: hosts_check.stdout_lines

- name: 파일 소유자 진단
  set_fact:
    weak_hosts: true  # 기본값 설정

- name: 소유자 확인 (root)
  set_fact:
    weak_hosts: false
  when: hosts_check.rc == 0 and hosts_check.stdout.split() | length > 2 and hosts_check.stdout.split()[2] == 'root'

- name: 소유자 확인 (본인 계정)
  set_fact:
    weak_hosts: false
  when: hosts_check.rc == 0 and hosts_check.stdout.split() | length > 2 and hosts_check.stdout.split()[2] == user_name.stdout

- name: 파일 존재하지 않음
  set_fact:
    weak_hosts: false 
  when: hosts_check.rc != 0

#### rhosts

- name: 본인 계정 확인 (rhosts)
  shell: whoami
  register: user_name_rhost

- name: hosts.equiv 파일 소유자 및 권한 확인 (rhosts)
  shell: "ls -al /etc/hosts.equiv"
  register: hosts_check_rhost
  ignore_errors: true

- name: hosts.equiv 파일 정보 출력 (rhosts)
  debug:
    var: hosts_check_rhost.stdout_lines

- name: 파일 소유자 진단 (rhosts)
  set_fact:
    weak_rhosts: true  # 기본값 설정

- name: 소유자 확인 (root) (rhosts)
  set_fact:
    weak_rhosts: false
  when: hosts_check_rhost.rc == 0 and hosts_check_rhost.stdout.split() | length > 2 and hosts_check_rhost.stdout.split()[2] == 'root'

- name: 소유자 확인 (본인 계정) (rhosts)
  set_fact:
    weak_rhosts: false
  when: hosts_check_rhost.rc == 0 and hosts_check_rhost.stdout.split() | length > 2 and hosts_check_rhost.stdout.split()[2] == user_name_rhost.stdout

- name: 파일 존재하지 않음 (rhosts)
  set_fact:
    weak_rhosts: false  # 파일이 없으면 취약하다고 가정
  when: hosts_check_rhost.rc != 0


# + 
- name: 계정 별 ‘+’ 부여 적절성 확인 (rhosts)
  shell: cat $HOME/.rhosts | grep +
  register: use_plus_rhosts
  ignore_errors: true

- name: 계정 별 ‘+’ 부여 적절성 확인 (hosts.equiv)
  shell: cat /etc/hosts.equiv | grep +
  register: use_plus_hosts
  ignore_errors: true

- name: ‘+’ 부여 변수 초기화
  set_fact:
    weak_plus: true  # 기본값을 true로 설정

- name: ‘+’ 부여 파일 없을 시 진단
  set_fact:
    weak_plus: false
  when: use_plus_rhosts.rc != 0 or use_plus_hosts.rc != 0 

- name: ‘+’ 부여 적절성 진단 
  set_fact:
    weak_plus: false
  when: use_plus_rhosts.stdout | length > 0 and use_plus_hosts.stdout | length > 0  

### 600hosts
- name: diag_file_600 초기화
  set_fact:
    hosts_600: true  # 기본값을 true로 설정

- name: hosts.equiv 및 .rhosts 파일 권한 확인
  set_fact:
    hosts_600: false
  when: (hosts_check.rc == 0 and (hosts_check.stdout.split()[0] | regex_replace("^(.{10}).*", "\\1") | regex_replace("^.{2}", "") | int(base=8) <= 600)) or (hosts_check_rhost.rc == 0 and (hosts_check_rhost.stdout.split()[0] | regex_replace("^(.{10}).*", "\\1") | regex_replace("^.{2}", "") | int(base=8) <= 600))

#### 파일 존재하지 않거나 '+' 기호 없을 시 diag_file_600: false 설정

- name: 파일이 존재하지 않거나 '+' 기호가 없을 때 진단
  set_fact:
    hosts_600: false
  when: 
    - hosts_check.rc != 0 or hosts_check_rhost.rc != 0  # 파일이 없을 때
    - use_plus_rhosts.stdout | length == 0 and use_plus_hosts.stdout | length == 0  # '+' 기호가 없을 때


- block:
    - debug:
        msg: "양호"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안}] }}"
  when: (not hosts_600) and (not weak_plus)  and (not weak_hosts)  # 조건 수정

- block:
    - debug:
        msg: "취약"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True, '조치방안': diag.조치방안}] }}"
  when: (hosts_600) or (weak_plus)  or (weak_hosts)  # 조건 수정

