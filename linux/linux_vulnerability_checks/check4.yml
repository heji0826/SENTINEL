# header
- set_fact:
    diag: "{{ {'항목': '패스워드 최대 사용 기간 설정', 'id': 4} }}"

# body
- name: Read PASS_MAX_DAYS value from /etc/login.defs
  ansible.builtin.shell: grep '^PASS_MAX_DAYS' /etc/login.defs | awk '{print $2}'
  register: pass_max_days_value
  ignore_errors: yes

- name: Debug PASS_MAX_DAYS value from stdout
  debug:
    msg: "PASS_MAX_DAYS stdout: {{ pass_max_days_value.stdout }}"

- name: Ensure PASS_MAX_DAYS is a valid integer
  set_fact:
    pass_max_days: "{{ pass_max_days_value.stdout | default('0') | regex_replace('[^0-9]', '') | int }}"
  when: pass_max_days_value.stdout != ''

- name: Debug PASS_MAX_DAYS after conversion
  debug:
    msg: "PASS_MAX_DAYS converted: {{ pass_max_days }}"

# weak?
- set_fact:
    weak: "{{ pass_max_days | int > 90 }}"
  when: pass_max_days is defined

- name: Display the PASS_MAX_DAYS value and status
  debug:
    msg: >
      PASS_MAX_DAYS is set to {{ pass_max_days }}.
      Vulnerable? {{ weak | default(false) }}
  when: pass_max_days is defined

- name: Display message if PASS_MAX_DAYS is not set
  debug:
    msg: "PASS_MAX_DAYS is not defined in /etc/login.defs."
  when: pass_max_days is not defined

# result
- block:
    - debug:
        msg: "취약"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True}] }}"
  when: weak

- block:
    - debug:
        msg: "양호"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False}] }}"
  when: not weak