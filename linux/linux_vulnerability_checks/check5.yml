# header
- set_fact:
    diag: "{{ {'항목': '패스워드 파일 보호', 'id': 5, '조치방안': '쉐도우 패스워드 정책 적용 및 일반 패스워드 정책 적용} }}"

# body
# Step 1: Check if /etc/shadow file exists
- name: Check if /etc/shadow file exists
  ansible.builtin.stat:
    path: /etc/shadow
  register: shadow_file

# Step 2: Set fact if /etc/shadow exists
- name: Determine if /etc/shadow exists
  set_fact:
    shadow_exists: "{{ shadow_file.stat.exists }}"

# Step 3: Check if /etc/passwd second field is "x" for all users
- name: Read the contents of /etc/passwd
  ansible.builtin.shell: cut -d':' -f2 /etc/passwd | grep -v '^x$'
  register: passwd_check
  ignore_errors: yes
  failed_when: false
  when: shadow_exists

# Step 4: Check if /etc/passwd has any passwords stored directly
- name: Determine if /etc/passwd contains passwords directly (not "x")
  set_fact:
    passwd_secure: "{{ passwd_check.stdout == '' }}"
  when: shadow_exists

# Step 5: Determine overall status (secure or vulnerable)
- name: Determine if system is secure or vulnerable
  set_fact:
    weak: "{{ not passwd_secure }}"
  when: shadow_exists

# Step 6: Output the final result in "Vulnerable? True" or "Vulnerable? False" format
- name: Display result in boolean vulnerable format
  debug:
    msg: >
      System is secure? {{ not weak }}.
      Vulnerable? {{ weak | ternary('True', 'False') }}.
      /etc/shadow exists? {{ shadow_exists }}.
      /etc/passwd is properly configured? {{ passwd_secure | default('unknown') }}.
  when: shadow_exists

- name: Display message if /etc/shadow does not exist
  debug:
    msg: "System is vulnerable. /etc/shadow file does not exist. Vulnerable? True."
  when: not shadow_exists

- block:
    - debug:
        msg: "취약"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True, '조치방안': diag.조치방안}] }}"
  when: weak

- block:
    - debug:
        msg: "양호"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안}] }}"
  when: not weak
