- set_fact:
    diag_file: 
      { '항목': '디렉토리 소유자 및 권한 확인', 'id': 15 }
    diag_dir: 
      { '항목': '파일 소유자 및 권한 확인', 'id': 16 }

- name: 사용자 홈 디렉터리 확인
  shell: "cat /etc/passwd | grep /home | cut -d: -f1"
  register: home_check
  ignore_errors: true 

- name: 디렉토리 소유자 및 권한 확인 
  shell: "ls -ld /home/{{ item }}"
  register: user_check
  loop: "{{ home_check.stdout_lines }}"
  ignore_errors: true

- name: 파일 소유자 및 권한 확인
  shell: "ls -la /home/{{ item }}"
  register: user_file_check
  loop: "{{ home_check.stdout_lines }}"
  ignore_errors: true

- name: 디렉토리 권한 취약점 판단
  set_fact:
    weak_home: false  # 기본값을 false로 설정
  when: user_check is defined

- name: 디렉토리 취약점 확인
  set_fact:
    weak_home: true
  when: user_check is defined and user_check.results | selectattr('stdout', 'search', '^-rw-r--r--') | list | length == 0

- name: 파일 권한 취약점 판단
  set_fact:
    weak_file: false  # 기본값을 false로 설정
  when: user_file_check is defined

- name: 파일 취약점 확인
  set_fact:
    weak_file: true
  when: user_file_check is defined and user_file_check.results | selectattr('stdout', 'search', '^-rw-r--r--') | list | length == 0

- block:
    - debug:
        msg: "디렉토리 취약"
    - set_fact:
        result: "{{ result + [{'id': diag_file.id, '제목': diag_file.항목, '취약': True}] }}"
  when: weak_home

- block:
    - debug:
        msg: "디렉토리 양호"
    - set_fact:
        result: "{{ result + [{'id': diag_file.id, '제목': diag_file.항목, '취약': False}] }}"
  when: not weak_home

- block:
    - debug:
        msg: "파일 취약"
    - set_fact:
        result: "{{ result + [{'id': diag_dir.id, '제목': diag_dir.항목, '취약': True}] }}"
  when: weak_file

- block:
    - debug:
        msg: "파일 양호"
    - set_fact:
        result: "{{ result + [{'id': diag_dir.id, '제목': diag_dir.항목, '취약': False}] }}"
  when: not weak_file

