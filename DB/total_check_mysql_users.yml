---
  - hosts: mysql_servers
    remote_user: rockylinux
    become: yes
    vars:
      mysql_root_password: "rockylinux"
      user_to_check: "test"  # 권한을 확인할 사용자 이름
      host_to_check: "localhost"  # 권한을 확인할 호스트
    tasks:
      - name: Check if unnecessary MySQL accounts exist
        mysql_user:
          name: "{{ item }}"
          state: absent
          login_user: root
          login_password: 'rockylinux'
        loop:
          - 'test'
          - 'guest'
          - 'anonymous'
        register: account_check_results

      - name: Show account existence results
        debug:
          var: item
        loop: "{{ account_check_results.results }}"
      # 2. check validate_password
      - name: Check MySQL validate_password_policy
        mysql_query:
          query: "SHOW VARIABLES LIKE 'validate_password_policy';"
          login_user: root
          login_password: 'rockylinux'
        register: password_policy

      - name: Debug password policy query result
        debug:
          var: password_policy

      - name: Check MySQL minimum password length
        mysql_query:
          query: "SHOW VARIABLES LIKE 'validate_password_length';"
          login_user: root
          login_password: 'rockylinux'
        register: password_length

      - name: Debug password length query result
        debug:
          var: password_length

      - name: Check validate_password_mixed_case_count
        mysql_query:
          query: "SHOW VARIABLES LIKE 'validate_password_mixed_case_count';"
          login_user: root
          login_password: 'rockylinux'
        register: mixed_case_count

      - name: Debug mixed case count query result
        debug:
          var: mixed_case_count

      - name: Check validate_password_number_count
        mysql_query:
          query: "SHOW VARIABLES LIKE 'validate_password_number_count';"
          login_user: root
          login_password: 'rockylinux'
        register: number_count

      - name: Debug number count query result
        debug:
          var: number_count

      - name: Check validate_password_special_char_count
        mysql_query:
          query: "SHOW VARIABLES LIKE 'validate_password_special_char_count';"
          login_user: root
          login_password: 'rockylinux'
        register: special_char_count

      - name: Debug special char count query result
        debug:
          var: special_char_count
      # 3. Check GRANT OPTION
      - name: Check if GRANT OPTION is assigned to users
        mysql_query:
          login_user: root
          login_password: "{{ mysql_root_password }}"
          query: "SELECT User, Host, Grant_priv FROM mysql.user WHERE User='{{ item.name }}' AND Host='{{ item.host }}';"
        loop:
          - { name: 'test', host: 'localhost' }
        register: grant_option_check

      - name: Show result of GRANT OPTION check
        debug:
          var: grant_option_check
      # 4. Check User Privileges
      - name: Check privileges for user
        mysql_user:
          login_user: root
          login_password: "{{ mysql_root_password }}"
          name: "{{ user_to_check }}"
          host: "{{ host_to_check }}"
          state: present  # 사용자 존재 여부 확인
        register: check_result
        failed_when: false 

      - name: Check if the password policy requirement is not satisfied
        debug:
          msg: "Password policy requirement is not satisfied."
        when: "'policy requirements' in check_result.msg"

      - name: Show user privileges if no errors
        debug:
          var: check_result
        when: "'policy requirements' not in check_result.msg"
      # 5. Check root privileges
      - name: Check MySQL user in configuration
        command: grep '^user=' /etc/my.cnf
        register: mysql_user_check
  
      - name: Show MySQL user configuration
        debug:
          msg: "MySQL user is set to: {{ mysql_user_check.stdout }}"
      # 6. Check configuration file permissions
      - name: Check permissions for MySQL configuration file
        stat:
          path: /etc/my.cnf
        register: mysql_config_stats
  
      - name: Show MySQL configuration file permissions
        debug:
          msg: "MySQL configuration file permissions: {{ mysql_config_stats.stat.mode }}; Owner: {{ mysql_config_stats.stat.pw_name }}; Group: {{ mysql_config_stats.stat.gr_name }}"
      # 7. Check accounts use SHA-256
      - name: Gather MySQL user accounts
        mysql_query:
          login_user: root
          login_password: rockylinux  # 여기에 루트 비밀번호 입력
          query: "SELECT user, host, plugin, authentication_string FROM mysql.user WHERE (plugin != 'mysql_native_password' OR (plugin = 'mysql_native_password' AND authentication_string NOT LIKE '%$5$%'));"
        register: users
  
      - name: Check if any MySQL users exist
        debug:
          msg: "No MySQL users found."
        when: users.query_result | length == 0
  
      - name: List users using weaker hashing algorithms
        debug:
          msg: "User {{ item.0 }} on host {{ item.1 }} uses a weaker hashing algorithm."
        loop: "{{ users.query_result }}"
        when: item[2] == 'mysql_native_password' and item[3] is defined and '%$5$%' not in item[3]
      # 8. Check_log_activate
      - name: Check if General log is enabled
        mysql_query:
          login_user: root
          login_password: 'rockylinux'
          query: "SHOW VARIABLES LIKE 'general_log';"
        register: general_log_status
  
      - name: Display General log status
        debug:
          var: general_log_status
  
      - name: Check General log file path
        mysql_query:
          login_user: root
          login_password: 'rockylinux'
          query: "SHOW VARIABLES LIKE 'general_log_file';"
        register: general_log_file
  
      - name: Display General log file path
        debug:
          var: general_log_file
  
      - name: Check if Slow query log is enabled
        mysql_query:
          login_user: root
          login_password: 'rockylinux'
          query: "SHOW VARIABLES LIKE 'slow_query_log';"
        register: slow_query_log_status
  
      - name: Display Slow query log status
        debug:
          var: slow_query_log_status
  
      - name: Check Slow query log file path
        mysql_query:
          login_user: root
          login_password: 'rockylinux'
          query: "SHOW VARIABLES LIKE 'slow_query_log_file';"
        register: slow_query_log_file
  
      - name: Display Slow query log file path
        debug:
          var: slow_query_log_file
  
      - name: Check Long query time setting
        mysql_query:
          login_user: root
          login_password: 'rockylinux'
          query: "SHOW VARIABLES LIKE 'long_query_time';"
        register: long_query_time
  
      - name: Display Long query time setting
        debug:
          var: long_query_time
      # 9. Check Latest security patch
      - name: Get MySQL current version
        shell: "mysql -V | awk '{ print $5 }' | cut -d',' -f1"
        register: mysql_version
        ignore_errors: yes
  
      - name: Show MySQL version
        debug:
          var: mysql_version.stdout
  
      - name: Check if MySQL version is up-to-date
        shell: "yum info mysql-server | grep Version"
        register: mysql_available_version
        ignore_errors: yes
  
      - name: Show available MySQL version from repository
        debug:
          var: mysql_available_version.stdout
  
      - name: Compare installed version with latest version
        set_fact:
          mysql_update_required: "{{ mysql_version.stdout is version(mysql_available_version.stdout, '<') }}"
  
      - name: MySQL is up-to-date
        debug:
          msg: "MySQL is up-to-date. Installed version: {{ mysql_version.stdout }}."
        when: not mysql_update_required
