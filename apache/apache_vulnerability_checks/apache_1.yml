# 진단 항목 정보 설정
- set_fact:
    diag: "{{ {'항목': '웹 서비스 영역의 분리 ', 'id': 1, '조치방안': '기본 디렉터리 변경'} }}"

# httpd.conf 파일 존재 여부 확인
- name: httpd.conf 파일 존재 여부 확인
  stat:
    path: /etc/httpd/conf/httpd.conf
  register: httpd_conf

# DocumentRoot 설정 확인
- name: DocumentRoot 설정 확인
  shell: cat /etc/httpd/conf/httpd.conf | grep '^ *DocumentRoot'
  register: DocumentRoot_check
  ignore_errors: true
  when: httpd_conf.stat.exists

# 경로 추출
- set_fact:
    document_root_path: >
      {% if DocumentRoot_check.stdout %}
        {{ DocumentRoot_check.stdout | regex_search('^ *DocumentRoot +(.*)$') | first }}
      {% else %}
        "없음"
      {% endif %}

# regex_search 결과 확인
- set_fact:
    regex_result: >
      {% if DocumentRoot_check.stdout.strip() | regex_search('/var/www/html') %}
        true
      {% else %}
        false
      {% endif %}

# 최종 결과
- block:
    - debug:
        msg: "취약"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True, '조치방안': diag.조치방안 }] }}"
  when: regex_result | regex_search('true') is not none  # /var/www/html이 포함된 경우

- block:
    - debug:
        msg: "양호"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안 }] }}"
  when: regex_result | regex_search('false') is not none  # /var/www/html이 포함되지 않은 경우
