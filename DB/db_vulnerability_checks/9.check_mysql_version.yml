- set_fact:
    diag: "{{ {'항목': '최신 보안 패치 적용', 'id': 9, '조치방안': '최신 보안 패치 버전으로 업그레이드'} }}"

# 현재 설치된 MySQL 버전 확인
- name: Get MySQL current version
  shell: "mysql -V | awk '{ print $5 }' | cut -d',' -f1"
  register: mysql_version
  ignore_errors: yes

- name: Show MySQL version
  debug:
    var: mysql_version.stdout

# 저장소에서 사용 가능한 최신 MySQL 버전 확인
- name: Check if MySQL version is up-to-date
  shell: "yum info mysql-server | grep Version | awk '{print $3}'"
  register: mysql_available_version
  ignore_errors: yes

- name: Show available MySQL version from repository
  debug:
    var: mysql_available_version.stdout

# 버전 비교
- name: Compare installed version with latest version
  set_fact:
    mysql_update_required: "{{ mysql_version.stdout | trim is version(mysql_available_version.stdout | trim, '<') }}"

# MySQL 버전이 최신이 아닐 경우 취약으로 표시
- block:
    - debug:
        msg: "취약"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True, '조치방안': diag.조치방안}] }}"
  when: mysql_update_required

# MySQL이 최신일 경우 양호로 표시
- block:
    - debug:
        msg: "양호"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안}] }}"
  when: not mysql_update_required

