# 넌 우선 파일을 가져올 거야.
# 그런 다음에 딕셔너리 중에 vulnerable_ids[3] 확인해서 값이 true면 vulnerable_ids[0] 가져와(id)



- name: 취약한 항목 찾기 
  hosts: localhost
  tasks:
  - name: 파일 불러오기 
    slurp:
      src: "/home/ubuntu/SENTINEL/apache/apache.json"  
    register: file_data

  # json파일 내용 base64 디코딩 필요 
  - set_fact:
      json_data: "{{ file_data.content | b64decode | from_json }}"

  # diag[3] 확인티비

  # \- name: Get dictionary item at index 3
  #   set_fact:
  #     item_at_index_3: "{{ json_data.data[3] }}"

  # - name: Debug item at index 3
  #   debug:
  #     var: item_at_index_3

  - name: 취약 진단 부분 확인
    set_fact:
       item_at_index_3: "{{ json_data.data[3] }}"
  
  - debug: 
     msg: "{{ json_data.data[3] }}"

#  # Append each task's result to the 'result' list, avoid duplicates
#     - name: Collect task results in the 'result' list
#       set_fact:
#         result: "{{ result + [{'항목': diag.항목, 'id': diag.id, '취약': weak, '조치방안': diag.조치방안}] }}"
#       when: diag is defined and weak is defined and (diag.id not in result | map(attribute='id') | list)