# 헤더
- set_fact:
    diag: "{{ {'항목': '최신 보안 패치 적용', 'id': 9, '조치방안': '최신 보안 패치 버전으로 업그레이드'} }}"

# 1. Get MySQL current version
- name: Get MySQL current version
  shell: "mysql -V | awk '{ print $5 }' | cut -d',' -f1"
  register: mysql_version
  ignore_errors: yes

- name: Show MySQL version
  debug:
    var: mysql_version.stdout

# 2. Check available MySQL version from repository
- name: Check available MySQL version from repository
  shell: "yum info mysql-server | grep Version"
  register: mysql_available_version
  ignore_errors: yes

- name: Show available MySQL version
  debug:
    var: mysql_available_version.stdout

# 3. Compare installed version with latest version
- name: Compare installed version with latest version
  set_fact:
    mysql_update_required: "{{ mysql_version.stdout is defined and mysql_available_version.stdout is defined and mysql_version.stdout is version(mysql_available_version.stdout, '<') }}"

- name: Debug mysql_update_required
  debug:
    msg: "mysql_update_required: {{ mysql_update_required | default('undefined') }}"

# 4. Update MySQL if not up-to-date
- name: Update MySQL if not up-to-date
  become: yes
  dnf:
    name: mysql-server
    state: latest
  when: mysql_update_required | default(false)

# 5. Recheck MySQL version after update
- name: Get MySQL current version after update
  shell: "mysql -V | awk '{ print $5 }' | cut -d',' -f1"
  register: mysql_version_after_update

- name: Show MySQL version after update
  debug:
    var: mysql_version_after_update.stdout

# 7. Determine if MySQL is updated
- block:
    - debug:
        msg: "양호"  # Not vulnerable
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안}] }}"
  when: mysql_version_after_update.stdout is defined and mysql_version.stdout == mysql_version_after_update.stdout

- block:
    - debug:
        msg: "취약"  # Vulnerable
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True, '조치방안': diag.조치방안}] }}"
  when: mysql_version_after_update.stdout is defined and mysql_version.stdout != mysql_version_after_update.stdout

# 8. Final result output
- name: 결과 출력
  debug:
    var: result
