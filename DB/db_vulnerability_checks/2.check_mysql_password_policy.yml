---
# 헤더
- set_fact:
    diag: "{{ {'항목': '취약한 패스워드 사용 제한', 'id': 2, '조치방안': '패스워드 복잡도 설정'} }}"

# MySQL 비밀번호 정책 조회 및 결과 등록
- name: Check MySQL validate_password_policy
  mysql_query:
    query: "SHOW VARIABLES LIKE 'validate_password_policy';"
    login_user: root
    login_password: 'hello'
  register: password_policy

- name: Debug password policy query result
  debug:
    var: password_policy

# 비밀번호 길이 검사
- name: Check MySQL minimum password length
  mysql_query:
    query: "SHOW VARIABLES LIKE 'validate_password_length';"
    login_user: root
    login_password: 'hello'
  register: password_length

- name: Debug password length query result
  debug:
    var: password_length

# 대소문자 조합 검사
- name: Check validate_password_mixed_case_count
  mysql_query:
    query: "SHOW VARIABLES LIKE 'validate_password_mixed_case_count';"
    login_user: root
    login_password: 'hello'
  register: mixed_case_count

- name: Debug mixed case count query result
  debug:
    var: mixed_case_count

# 숫자 포함 검사
- name: Check validate_password_number_count
  mysql_query:
    query: "SHOW VARIABLES LIKE 'validate_password_number_count';"
    login_user: root
    login_password: 'hello'
  register: number_count

- name: Debug number count query result
  debug:
    var: number_count

# 특수 문자 포함 검사
- name: Check validate_password_special_char_count
  mysql_query:
    query: "SHOW VARIABLES LIKE 'validate_password_special_char_count';"
    login_user: root
    login_password: 'hello'
  register: special_char_count

- name: Debug special char count query result
  debug:
    var: special_char_count

# 결과 처리 초기화
- set_fact:
    weak: false

# 취약성 체크
- set_fact:
    weak: true
  when: 
    - password_policy.query_result | length > 0 and password_policy.query_result[0][1] | lower != 'strong'
    - password_length.query_result | length > 0 and password_length.query_result[0][1] | int < 8
    - mixed_case_count.query_result | length > 0 and mixed_case_count.query_result[0][1] | int < 1
    - number_count.query_result | length > 0 and number_count.query_result[0][1] | int < 1
    - special_char_count.query_result | length > 0 and special_char_count.query_result[0][1] | int < 1 

# 결과 추가 (취약한 경우)
- block:
    - debug:
        msg: "취약"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True, '조치방안': diag.조치방안}] }}"
  when: weak

# 결과 추가 (양호한 경우)
- block:
    - debug:
        msg: "양호"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안}] }}"
  when: not weak

# 최종 결과 출력
- name: 최종 결과 출력
  debug:
    var: result

