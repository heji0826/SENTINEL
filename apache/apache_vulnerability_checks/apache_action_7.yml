---
# 헤더
- set_fact:
    diag: "{{ {'항목': '최신 보안 패치 적용', 'id': 7, '조치방안': 'apache 최신 버전으로 업데이트'} }}"

- name: Check current Apache version  # 현재 Apache 버전 확인
  command: httpd -v
  register: apache_version
  ignore_errors: yes  # 오류 발생 시에도 다음 태스크로 진행

- name: Display current Apache version  # 현재 Apache 버전 출력
  debug:
    msg: "Current Apache version: {{ apache_version.stdout | default('Not installed') }}"

- name: Extract version string  # 버전 문자열 추출
  set_fact:
    version_string: "{{ (apache_version.stdout | regex_search('Apache/([\\d.]+)', '\\1')) | first }}"
  when: apache_version.rc == 0 and 'Apache' in apache_version.stdout

- name: Debug version string  # 버전 문자열 디버깅
  debug:
    msg: "Extracted version string: {{ version_string }}"

- name: Extract major and minor version numbers  # 주요 및 부 버전 번호 추출
  set_fact:
    major_version: "{{ version_string.split('.')[0] | int }}"
    minor_version: "{{ version_string.split('.')[1] | int }}"

- name: Check if Apache version is below 2.2  # Apache 버전이 2.2 미만인지 확인
  set_fact:
    weak: "{{ (major_version | int < 2) or (major_version | int == 2 and minor_version | int < 2) }}"

- name: Debug if Apache version is below 2.2
  debug:
    msg: "Apache version is below 2.2: {{ weak }}"

- name: Update Apache to the latest version  # 최신 버전으로 Apache 업데이트
  become: yes  # 관리자 권한 사용
  yum:
    name: httpd
    state: latest
  when: weak  # 취약할 경우 업데이트

- name: Ensure Apache is running  # Apache가 실행 중인지 확인
  become: yes  # 관리자 권한 사용
  service:
    name: httpd
    state: started
    enabled: yes