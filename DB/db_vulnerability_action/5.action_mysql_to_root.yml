# Header: Set diagnostic information
- set_fact:
    diag: "{{ {'항목': 'root 권한으로 서버 구동 제한', 'id': 5, '조치방안': 'mysql server config 파일에서 [mysqld] 그룹의 user 지시자 설정'} }}"

- set_fact:
    result: []

# 5. Check MySQL service status and configuration
- name: Check MySQL service status
  command: systemctl status mysqld
  register: mysql_status

- name: Stop MySQL service if running
  command: systemctl stop mysqld
  when: mysql_status.rc == 0

- name: Update MySQL configuration to restrict to root
  lineinfile:
    path: /etc/my.cnf
    regexp: '^user='
    line: 'user=root'
  notify: restart mysql

- name: Start MySQL service
  command: systemctl start mysqld

# Result blocks
- block:
    - debug:
        msg: "취약"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True, '조치방안': diag.조치방안}] }}"
  when: mysql_status.rc != 0

- block:
    - debug:
        msg: "양호"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안}] }}"
  when: mysql_status.rc == 0

- name: 최종 결과 출력
  debug:
    var: result
