# header
- set_fact:
    diag: "{{ {'항목': 'rpc 서비스 확인', 'id': 27} }}"

# body
- name: Check if xinetd is installed
  command: "ls /etc/xinetd.d/rstatd"
  register: xinetd_check
  ignore_errors: yes

- block:
    - name: Check rstatd configuration
      shell: "cat /etc/xinetd.d/rstatd"
      register: rstatd_conf
      when: xinetd_check.rc == 0
      ignore_errors: yes

    - name: Set weak variable based on rstatd configuration
      set_fact:
        weak: "{{ 'disabled=yes' not in rstatd_conf.stdout }}"
      when: xinetd_check.rc == 0

    - block:
        - debug:
            msg: "rstatd가 활성화되어 있어 취약합니다."
        - set_fact:
            result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True}] }}"
      when: weak is defined and weak

    - block:
        - debug:
            msg: "rstatd가 비활성화되어 있어 양호합니다."
        - set_fact:
            result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False}] }}"
      when: weak is defined and not weak

- name: Check if rpcbind is active
  command: "systemctl is-active rpcbind"
  register: rpcbind_status
  when: xinetd_check.rc != 0

- block:
    - debug:
        msg: "rpcbind가 활성화되어 있어 취약합니다."
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True}] }}"
  when: rpcbind_status.stdout == "active"

- block:
    - debug:
        msg: "rpcbind가 비활성화되어 있어 양호합니다."
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False}] }}"
  when: rpcbind_status.stdout != "active"
