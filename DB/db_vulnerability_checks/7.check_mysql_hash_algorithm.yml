# header (진단 항목 설정)
- set_fact:
    diag: "{{ {'항목': '안전한 패스워드 암호화 알고리즘 사용', 'id': 7, '조치방안': 'SHA-256 이상의 해시 알고리즘 설정'} }}"

# 결과 초기화
- set_fact:
    result: []

# MySQL 사용자 계정 정보 가져오기
- name: Gather MySQL user accounts
  mysql_query:
    login_user: root
    login_password: rockylinux  # 루트 비밀번호 입력
    query: "SELECT user, host, plugin, authentication_string FROM mysql.user WHERE (plugin != 'mysql_native_password' OR (plugin = 'mysql_native_password' AND authentication_string NOT LIKE '%$5$%'));"
  register: users

# MySQL 사용자가 없는 경우 메시지 출력
- name: Check if any MySQL users exist
  debug:
    msg: "No MySQL users found."
  when: users.query_result | length == 0

# 약한 해싱 알고리즘을 사용하는 사용자 리스트
- name: List users using weaker hashing algorithms
  debug:
    msg: "User {{ item.0 }} on host {{ item.1 }} uses a weaker hashing algorithm."
  loop: "{{ users.query_result }}"
  when: item[2] == 'mysql_native_password' and item[3] is defined and '%$5$%' not in item[3]
  register: weak_users

# result (취약한 경우)
- block:
    - debug:
        msg: "취약"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True, '조치방안': diag.조치방안}] }}"
  when: weak_users is defined and weak_users.results | length > 0

# result (양호한 경우)
- block:
    - debug:
        msg: "양호"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안}] }}"
  when: weak_users is not defined or weak_users.results | length == 0

# 최종 결과 출력
- name: 결과 출력
  debug:
    var: result
