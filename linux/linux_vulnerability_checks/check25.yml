# header
- set_fact:
    diag: "{{ {'항목': 'NFS 접근 통제', 'id': 25, '조치방안': 'everyone 마운트 제거 및 /etc/exports 파일에서 접근 통제 설정'} }}"

# body

# 1. Check NFS exports configuration
- name: Check if NFS exports file exists
  command: "ls /etc/exports"
  register: nfs_exports_file
  ignore_errors: yes

- name: Read NFS exports configuration if the file exists
  command: "cat /etc/exports"
  register: nfs_exports
  when: nfs_exports_file.rc == 0
  ignore_errors: yes

- name: Display NFS exports configuration
  debug:
    msg: "{{ nfs_exports.stdout_lines | default(['NFS exports 파일이 없습니다.']) }}"

# 2. Analyze NFS exports for access control
- set_fact:
    is_empty_file: "{{ nfs_exports_file.rc != 0 or (nfs_exports.stdout | length == 0) }}"
    has_restricted_access: "{{ not (nfs_exports.stdout is search('^[^#].*\\s+\\*\\s*$')) }}"

# 3. Final result
- block:
    - debug:
        msg: "NFS 접근 통제 설정이 비어 있거나 파일이 없으므로 양호합니다."
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안}] }}"
  when: is_empty_file

- block:
    - debug:
        msg: "NFS 접근 통제가 비효율적으로 설정되어 있어 취약합니다."
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True, '조치방안': diag.조치방안}] }}"
  when: not is_empty_file and has_restricted_access  # '*' 접근이 설정된 경우 취약

- block:
    - debug:
        msg: "NFS 접근 통제가 적절하게 설정되어 있어 양호합니다."
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안}] }}"
  when: not is_empty_file and not has_restricted_access  # 접근이 제한된 경우 양호
