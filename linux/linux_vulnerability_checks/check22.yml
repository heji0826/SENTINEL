# header
- set_fact:
    diag: "{{ {'항목': 'rsh, rlogin, rexec 서비스 비활성화 확인', 'id': 22, '조치방안': '/etc/xinetd.d  하위의 rlogin ,rsh, rexec 파일에서 disable=yes 설정'} }}"

# body
# Step 1: Check if /etc/xinetd.d/rsh exists and check the 'disable' status
- name: Check if /etc/xinetd.d/rsh exists
  ansible.builtin.stat:
    path: /etc/xinetd.d/rsh
  register: rsh_file

- name: Check disable status in /etc/xinetd.d/rsh
  ansible.builtin.shell: grep 'disable' /etc/xinetd.d/rsh
  register: disable_rsh
  when: rsh_file.stat.exists
  ignore_errors: yes

# Step 2: Check if /etc/xinetd.d/rlogin exists and check the 'disable' status
- name: Check if /etc/xinetd.d/rlogin exists
  ansible.builtin.stat:
    path: /etc/xinetd.d/rlogin
  register: rlogin_file

- name: Check disable status in /etc/xinetd.d/rlogin
  ansible.builtin.shell: grep 'disable' /etc/xinetd.d/rlogin
  register: disable_rlogin
  when: rlogin_file.stat.exists
  ignore_errors: yes

# Step 3: Check if /etc/xinetd.d/rexec exists and check the 'disable' status
- name: Check if /etc/xinetd.d/rexec exists
  ansible.builtin.stat:
    path: /etc/xinetd.d/rexec
  register: rexec_file

- name: Check disable status in /etc/xinetd.d/rexec
  ansible.builtin.shell: grep 'disable' /etc/xinetd.d/rexec
  register: disable_rexec
  when: rexec_file.stat.exists
  ignore_errors: yes

# Step 4: Determine weak state based on conditions (check if any service is enabled)
- name: Determine if rsh is disabled
  set_fact:
    rsh_disabled: "{{ disable_rsh.stdout is search('disable[[:space:]]*=[[:space:]]*yes') }}"
  when: rsh_file.stat.exists

- name: Determine if rlogin is disabled
  set_fact:
    rlogin_disabled: "{{ disable_rlogin.stdout is search('disable[[:space:]]*=[[:space:]]*yes') }}"
  when: rlogin_file.stat.exists

- name: Determine if rexec is disabled
  set_fact:
    rexec_disabled: "{{ disable_rexec.stdout is search('disable[[:space:]]*=[[:space:]]*yes') }}"
  when: rexec_file.stat.exists

# Step 5: Define weak state based on conditions
- name: Check if system is vulnerable
  set_fact:
    weak: "{{ 
      (rsh_file.stat.exists and not rsh_disabled) or 
      (rlogin_file.stat.exists and not rlogin_disabled) or 
      (rexec_file.stat.exists and not rexec_disabled)
    }}"
  when: rsh_file.stat.exists or rlogin_file.stat.exists or rexec_file.stat.exists

# Step 6: If all files are absent, mark system as secure
- name: Mark system as secure if all files are absent
  set_fact:
    weak: false
  when: not rsh_file.stat.exists and not rlogin_file.stat.exists and not rexec_file.stat.exists

# Step 7: Display the vulnerability status
- name: Display the vulnerability status
  debug:
    msg: >
      Vulnerable? {{ weak | ternary('True', 'False') }}.
      /etc/xinetd.d/rsh exists? {{ rsh_file.stat.exists }}.
      /etc/xinetd.d/rlogin exists? {{ rlogin_file.stat.exists }}.
      /etc/xinetd.d/rexec exists? {{ rexec_file.stat.exists }}.


- block:
    - debug:
        msg: "취약"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True, '조치방안': diag.조치방안}] }}"
  when: weak

- block:
    - debug:
        msg: "양호"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안}] }}"
  when: not weak
