- set_fact:
    diag: "{{ { '항목': '파일 업로드 및 다운로드 제한 조치', 'id': 4, '조치방안': '파일 업로드 및 다운로드 용량 제한 설정' } }}"

# LimitRequestBody 설정 확인
- name: LimitRequestBody 설정 확인
  shell: cat /etc/httpd/conf/httpd.conf | grep LimitRequestBody
  register: LimitRequestBody_httpd
  ignore_errors: true 

# LimitRequestBody 설정의 유무와 설정 값 확인
- set_fact:
    weak: > 
      {% if LimitRequestBody_httpd.stdout.strip() | regex_search('LimitRequestBody\s+\d+') %}
        false  # 설정이 있고 숫자가 있으면 양호
      {% else %}
        true   # 설정이 없거나 숫자가 없으면 취약
      {% endif %}

# 취약한 경우 LimitRequestBody 설정 추가 및 Apache 재시작
- block:
    - name: LimitRequestBody 설정 추가
      lineinfile:
        path: /etc/httpd/conf/httpd.conf
        line: 'LimitRequestBody 204800000'
        state: present
        insertafter: '<Directory /var/www>'
      register: LimitRequestBody_action_httpd

    - name: Apache 재시작
      service:
        name: httpd
        state: restarted
      when: LimitRequestBody_action_httpd.changed

    # 설정 후 재검사: 다시 LimitRequestBody 확인
    - name: LimitRequestBody 설정 확인 재실행
      shell: cat /etc/httpd/conf/httpd.conf | grep LimitRequestBody
      register: LimitRequestBody_httpd_after
      ignore_errors: true

    # 설정 후 다시 평가
    - set_fact:
        weak: > 
          {% if LimitRequestBody_httpd_after.stdout.strip() | regex_search('LimitRequestBody\s+\d+') %}
            false
          {% else %}
            true
          {% endif %}


# 취약한 경우 처리
- block:
  - debug:
      msg: "취약"
  - set_fact:
      result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True, '조치방안': diag.조치방안 }] }}"
  when: (weak | regex_search('false')) is none

# 양호한 경우 처리
- block:
    - debug:
        msg: "양호"
    - set_fact:
        result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False, '조치방안': diag.조치방안 }] }}"
  when: (weak | regex_search('false')) is not none