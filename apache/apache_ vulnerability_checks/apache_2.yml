
  # 진단 항목 정보 설정
  - set_fact:
      diag_file: 
        { '항목': '매뉴얼 파일 존재 여부', 'id': 2 }
      diag_dir: 
        { '항목': '매뉴얼 디렉터리 존재 여부', 'id': 2 }

  # 매뉴얼 파일 존재 여부 확인
  - name: manual 파일 존재 여부 확인
    stat:
      path: /etc/httpd/conf/manual
    register: manual_file

  # 매뉴얼 파일 취약점 판단
  - set_fact:
      weak_manual_file: >
        {% if manual_file.stat.exists %}
          true
        {% else %}
          false
        {% endif %}

  # 결과 수집 (매뉴얼 파일)
  - block:
      - debug:
          msg: "manual file found"
      - set_fact:
          result: "{{ result + [{'id': diag_file.id, '제목': diag_file.항목, '취약': True}] }}"
    when: weak_manual_file

  - block:
      - debug:
          msg: "manual file not found"
      - set_fact:
          result: "{{ result + [{'id': diag_file.id, '제목': diag_file.항목, '취약': False}] }}"
    when: not weak_manual_file

  # 매뉴얼 디렉터리 존재 여부 확인
  - name: 매뉴얼 디렉터리 존재 여부 출력
    shell: cat /etc/httpd/conf/httpd.conf | grep manual
    register: grep_result
    ignore_errors: true  # grep 결과가 없을 경우 오류를 무시

  # 매뉴얼 디렉터리 취약점 판단
  - set_fact:
      weak_manual_dir: >
        {% if grep_result.stdout %}
          true
        {% else %}
          false
        {% endif %}

  # 결과 수집 (매뉴얼 디렉터리)
  - block:
      - debug:
          msg: "manual directory found"
      - set_fact:
          result: "{{ result + [{'id': diag_dir.id, '제목': diag_dir.항목, '취약': True}] }}"
    when: weak_manual_dir

  - block:
      - debug:
          msg: "manual directory not found"
      - set_fact:
          result: "{{ result + [{'id': diag_dir.id, '제목': diag_dir.항목, '취약': False}] }}"
    when: not weak_manual_dir

  # 최종 결과 출력
  - name: 최종 결과
    debug:
      msg: "{{ result }}"
