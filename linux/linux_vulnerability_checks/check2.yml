# header
- set_fact:
    diag: "Password Complexity and enforce_for_root Check"  # 점검 내용 이름
    num: 2  # 점검 번호

# body

# Step 1: Check enforce_for_root in /etc/pam.d/system-auth
- name: Check enforce_for_root setting in /etc/pam.d/system-auth
  ansible.builtin.shell: grep enforce_for_root /etc/pam.d/system-auth
  register: enforce_for_root_setting
  ignore_errors: yes

# Step 2: Check password complexity in /etc/security/pwquality.conf or /etc/pam.d/system-auth
- name: Check password complexity in /etc/security/pwquality.conf
  ansible.builtin.shell: |
    grep -E 'minlen|dcredit|ucredit|lcredit|ocredit' /etc/security/pwquality.conf
  register: pwquality_conf_complexity
  ignore_errors: yes

- name: Check password complexity in /etc/pam.d/system-auth
  ansible.builtin.shell: |
    grep -E 'minlen|dcredit|ucredit|lcredit|ocredit' /etc/pam.d/system-auth
  register: system_auth_complexity
  ignore_errors: yes

# weak?
- set_fact:
    weak: |
      {% if 'enforce_for_root' not in enforce_for_root_setting.stdout %}
        True  # enforce_for_root가 없으면 취약
      {% elif (pwquality_conf_complexity.stdout == '' and system_auth_complexity.stdout == '') %}
        True  # 복잡도 설정이 없다면 취약
      {% else %}
        # 복잡도 검사
        minlen_pwq = pwquality_conf_complexity.stdout | regex_search('minlen=([0-9]+)', '\\1')
        minlen_sys = system_auth_complexity.stdout | regex_search('minlen=([0-9]+)', '\\1')
        minlen = minlen_pwq if minlen_pwq else minlen_sys
        minlen is defined and (
          (minlen|int >= 8 and 
           'dcredit=-1' in pwquality_conf_complexity.stdout and
           'ucredit=-1' in pwquality_conf_complexity.stdout and 
           'lcredit=-1' in pwquality_conf_complexity.stdout and
           'ocredit=-1' in pwquality_conf_complexity.stdout) or
          (minlen|int >= 10 and (
           'dcredit=-1' in pwquality_conf_complexity.stdout or
           'ucredit=-1' in pwquality_conf_complexity.stdout or
           'lcredit=-1' in pwquality_conf_complexity.stdout or
           'ocredit=-1' in pwquality_conf_complexity.stdout))
        ) == False
      {% endif %}

# Show the weak variable value
- debug:
    var: weak

# result
- block:
    - debug:
        msg: "취약"
    - set_fact:
        result: "{{ result + [{'num': num, 'diag': diag, 'weak': True}] }}"
  when: weak | bool

- block:
    - debug:
        msg: "양호"
    - set_fact:
        result: "{{ result + [{'num': num, 'diag': diag, 'weak': False}] }}"
  when: (not weak) | bool
