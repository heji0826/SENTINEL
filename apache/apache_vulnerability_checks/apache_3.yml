
  # 진단 항목 정보 설정
  - set_fact:
      diag: "{{ { '항목': ' 링크 사용 금지', 'id': 3, '조치방안': '1. 심볼릭 링크 사용 제한, 2. Alias 사용 제한' } }}"
      diag_symlink: 
        { '항목': '심볼릭 링크 사용 취약점', 'id': 3 }
      diag_aliases: 
        { '항목': 'aliases 사용 취약점', 'id': 3 }

  # 심볼릭 링크 사용 제한 여부 확인
  - name: 심볼릭 링크 사용 제한 여부 확인
    shell: cat /etc/httpd/conf/httpd.conf | grep FollowSymLinks
    register: SymLinks_httpd

  # 심볼릭 링크 취약점 판단
  - set_fact:
      weak_sym_links: >
        {% if SymLinks_httpd.stdout | regex_search('Indexes FollowSymLinks') %}
          true
        {% else %}
          false
        {% endif %}

  # aliases 사용 제한 여부 확인
  - name: aliases 사용 제한 여부 확인
    shell: cat /etc/httpd/conf/httpd.conf | grep Aliases
    register: aliases_httpd

  # aliases 취약점 판단
  - set_fact:
      weak_aliases: >
        {% if aliases_httpd.stdout | regex_search('^(?!\\s*#).*Aliases') %}
          true
        {% else %}
          false
        {% endif %}


###최종 결과
  - block:
      - debug:
          msg: "취약"
      - set_fact:
          result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': True}] }}"
    when: weak_aliases | regex_search('false') is none or weak_sym_links | regex_search('false') is none
  - block:
      - debug:
          msg: "양호"
      - set_fact:
          result: "{{ result + [{'id': diag.id, '제목': diag.항목, '취약': False}] }}"
    when: weak_aliases | regex_search('false') is not none and weak_sym_links | regex_search('false') is not none
